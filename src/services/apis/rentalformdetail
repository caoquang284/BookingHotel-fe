import type { RentalFormDetailDTO, ResponseRentalFormDetailDTO } from '../../types';

const BASE_URL = 'http://localhost:8080/api/rental-form-detail';

export async function getAllRentalFormDetails(page: number = 0, size: number = 10): Promise<ResponseRentalFormDetailDTO[]> {
    const response = await fetch(`${BASE_URL}?page=${page}&size=${size}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
        },
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error('Failed to fetch rental form details: ' + error);
    }

    return await response.json();
}

export async function getRentalFormDetailById(id: number): Promise<ResponseRentalFormDetailDTO> {
    const response = await fetch(`${BASE_URL}/${id}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
        },
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error(`Failed to fetch rental form detail with id ${id}: ` + error);
    }

    return await response.json();
}

export async function createRentalFormDetail(
    data: RentalFormDetailDTO,
    impactorId: number,
    impactor: string
): Promise<ResponseRentalFormDetailDTO> {
    const response = await fetch(`${BASE_URL}/${impactorId}/${impactor}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error('Failed to create rental form detail: ' + error);
    }

    return await response.json();
}

export async function createRentalFormDetails(
    rentalFormId: number,
    guestIds: number[],
    impactorId: number,
    impactor: string
): Promise<ResponseRentalFormDetailDTO[]> {
    const response = await fetch(`${BASE_URL}/rental-form/${rentalFormId}/${impactorId}/${impactor}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(guestIds),
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error('Failed to create rental form details: ' + error);
    }

    return await response.json();
}

export async function updateRentalFormDetail(
    id: number,
    data: RentalFormDetailDTO,
    impactorId: number,
    impactor: string
): Promise<ResponseRentalFormDetailDTO> {
    const response = await fetch(`${BASE_URL}/${id}/${impactorId}/${impactor}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error(`Failed to update rental form detail with id ${id}: ` + error);
    }

    return await response.json();
}

export async function deleteRentalFormDetail(
    id: number,
    impactorId: number,
    impactor: string
): Promise<string> {
    const response = await fetch(`${BASE_URL}/${id}/${impactorId}/${impactor}`, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        },
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error(`Failed to delete rental form detail with id ${id}: ` + error);
    }

    return await response.text();
}

export async function getRentalFormDetailsByUserId(userId: number): Promise<ResponseRentalFormDetailDTO[]> {
    const response = await fetch(`${BASE_URL}/user-id/${userId}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
        },
    });

    if (!response.ok) {
        const error = await response.text();
        throw new Error(`Failed to fetch rental form details for user id ${userId}: ` + error);
    }

    return await response.json();
}